---

- name: Install Homebrew
  action: "shell ruby -e $(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install) creates=/usr/local/bin/brew"
  register: brew_install

- name: Install brews
  action: homebrew state=installed
    name='zsh,zsh-completions,git,vim,curl,wget,tmux,jq,mercurial'
  register: install_brews

- name: python pip
  action: pip name={{ item }} state=present
  with_items:
      - virtualenv
      - virtualenv-clone
      - virtualenvwrapper

# Grab Dotfiles
- name: Grab dot files
  action: get_url url={{ item.url }} dest={{ item.dest }} force=yes
  with_items:
  - { url: 'https://raw.githubusercontent.com/joethemongoose/Dotfiles/master/zfunctions',   dest: '~/.zfunctions'  }
  - { url: 'https://raw.githubusercontent.com/joethemongoose/Dotfiles/master/zshenv-osx',   dest: '~/.zshenv'      }
  - { url: 'https://raw.githubusercontent.com/joethemongoose/Dotfiles/master/zshrc-osx',    dest: '~/.zshrc'       }
  - { url: 'https://raw.githubusercontent.com/joethemongoose/Dotfiles/master/zshrc.zni',    dest: '~/.zsh.zni'     }
  - { url: 'https://raw.githubusercontent.com/joethemongoose/Dotfiles/master/tmux.conf',    dest: '~/.tmux.conf'   }
  - { url: 'https://raw.githubusercontent.com/joethemongoose/Dotfiles/master/vimrc.after',  dest: '~/.vimrc.after' }

- name: Change shell to zsh
  sudo: yes
  when: lookup('env','SHELL') != "/usr/local/bin/zsh"
  action: command chsh -s /usr/local/bin/zsh "{{ lookup('env', 'USER') }}"
  register: changed_shell
  changed_when: not changed_shell.stderr.find("no changes made")

# install antigen
- name: get antigen
  action: git repo=https://github.com/zsh-users/antigen.git dest=~/.antigen

# RVM
- name: install rvm
  action: "shell curl -sSL https://get.rvm.io | /bin/bash -s stable --ruby={{ ruby_version }} --ignore-dotfiles --autolibs=4 creates=~/.rvm"
  register: rvm_install

- name: evaulate rvm version
  action: "shell executable=/usr/local/bin/zsh rvm --version | awk 'FNR == 2 {print $2}'"
  register: rvm_version
  changed_when: false

- name: evaulate latest stable avaiable
  action: command curl -sSL https://raw.github.com/wayneeseguin/rvm/stable/VERSION
  register: rvm_version_avaiable
  changed_when: false

- name: update rvm
  when: rvm_version_avaiable.stdout != rvm_version.stdout
  action: shell executable=/usr/local/bin/zsh rvm get stable --ignore-dotfiles --autolibs=4 && rvm

- name: install ruby version {{ ruby_version }}
  when: rvm_install|skipped
  action: shell executable=/usr/local/bin/zsh rvm install --default {{ ruby_version }} creates=~/.rvm/rubies/ruby-{{ ruby_version }}

# NVM
- name: clone nvm
  action: git repo=https://github.com/creationix/nvm.git dest=~/.nvm

- name: install nodejs version {{ node_version }}
  action: shell executable=/usr/local/bin/zsh nvm install {{ node_version }} creates=~/.nvm/{{ node_version }}

- name: check nvm alias
  action: shell executable=/usr/local/bin/zsh nvm alias
  register: nvm_alias
  changed_when: false

- name: make nodejs default
  action: shell executable=/usr/local/bin/zsh nvm alias default {{ node_version }}
  register: nvm_default
  changed_when: not nvm_default.stdout.find("{{ nvm_alias }}")

# GVM
- name: install gvm wrapper
  action: "shell executable=/usr/local/bin/zsh curl -sSL https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer | /bin/bash creates=~/.gvm"
  ignore_errors: yes

- name: install gvm version {{ golang_version }}
  action: shell executable=/usr/local/bin/zsh gvm install go{{ golang_version }} creates=~/.gvm/gos/go{{ golang_version }}

- name: check gvm alias
  action: shell executable=/usr/local/bin/zsh gvm list
  register: gvm_alias
  changed_when: false

- name: make gvm default
  action: shell executable=/usr/local/bin/zsh gvm use go{{ golang_version }} --default
  register: gvm_default
  changed_when: not gvm_default.stdout.find("{{ gvm_alias.stdout.find("=>") }}")

# Janus
- name: get janus
  action: git repo=https://github.com/carlhuda/janus.git dest=~/.vim
  register: get_janus
  changed_when: get_janus.before != get_janus.after

- name: update janus
  when: '(get_janus.changed and get_janus.before is string)'
  action: shell executable=/usr/local/bin/zsh chdir=~/.vim rake default -qs
