---
# Homebrew work
- name: Install Homebrew
  action: "shell ruby -e $(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install) creates=/usr/local/bin/brew"
  register: brew_install

- name: homebrew tap cask
  action: command brew tap caskroom/cask
  register: tap_cask
  changed_when: '"Already tapped" not in tap_cask.stderr'

- name: update homebrew
  when: brew_install|skipped
  action: homebrew update_homebrew=yes
  register: update_homebrew

- name: Install brews
  action: homebrew state=latest
    name='zsh,zsh-completions,git,vim,curl,wget,tmux,jq,mercurial,brew-cask'

- name: update brews
  when: update_homebrew.changed
  action: homebrew upgrade_all=yes
  register: update_brews

- name: homebrew tap cask
  action: command brew tap caskroom/cask
  register: brew_cask
  changed_when: brew_cask.stdout != ''

- name: homebrew install cask
  when: brew_cask|changed
  action: command brew install brew-cask

- name: homebrew cask install software
  action: homebrew_cask
    name="atom,handbrake,iterm2,keepassx,quicksilver,scala-ide,spotify,vagrant,virtualbox,github,hipchat,java,netbeans,reggy,sourcetree,tunnelblick,vagrant-manager,vlc"

- name: python pip
  action: pip name={{ item }} state=present
  with_items:
      - virtualenv
      - virtualenv-clone
      - virtualenvwrapper

# Grab Dotfiles
- name: Grab dot files
  action: get_url url={{ item.url }} dest={{ item.dest }} force=yes
  with_items:
  - { url: 'https://raw.githubusercontent.com/joethemongoose/Dotfiles/master/zfunctions',   dest: '~/.zfunctions'  }
  - { url: 'https://raw.githubusercontent.com/joethemongoose/Dotfiles/master/zshenv-osx',   dest: '~/.zshenv'      }
  - { url: 'https://raw.githubusercontent.com/joethemongoose/Dotfiles/master/zshrc-osx',    dest: '~/.zshrc'       }
  - { url: 'https://raw.githubusercontent.com/joethemongoose/Dotfiles/master/zshrc.zni',    dest: '~/.zshrc.zni'   }
  - { url: 'https://raw.githubusercontent.com/joethemongoose/Dotfiles/master/tmux.conf',    dest: '~/.tmux.conf'   }
  - { url: 'https://raw.githubusercontent.com/joethemongoose/Dotfiles/master/vimrc.after',  dest: '~/.vimrc.after' }

- name: Change shell to zsh
  sudo: yes
  when: lookup('env','SHELL') != "/usr/local/bin/zsh"
  action: command chsh -s /usr/local/bin/zsh "{{ lookup('env', 'USER') }}"
  register: changed_shell
  changed_when: not changed_shell.stderr.find("no changes made")

# install antigen
- name: get antigen
  action: git repo=https://github.com/zsh-users/antigen.git dest=~/.antigen

- name: update antigen
  action: shell executable=/usr/local/bin/zsh chdir=~ source .antigen/antigen.zsh && antigen-update

# RVM
- name: install rvm
  when: lookup('pipe',"PATH=$GEM_HOME/bin:$HOME/.rvm/bin:$PATH rvm --version")
  action: "shell curl -sSL https://get.rvm.io | /bin/bash -s stable --ruby={{ ruby_version }} --ignore-dotfiles --autolibs=4 creates=~/.rvm"
  register: rvm_install

- name: autoload rvm
  action: lineinfile dest=~/.rvmrc line="rvm_auto_reload_flag=2"

- name: update rvm
  when: lookup('pipe',"PATH=$GEM_HOME/bin:$HOME/.rvm/bin:$PATH rvm --version | awk '{print $2}'") != lookup('pipe','curl -sSL https://raw.github.com/wayneeseguin/rvm/stable/VERSION')
  action: shell executable=/usr/local/bin/zsh rvm get stable --ignore-dotfiles --autolibs=4 && rvm

- name: install ruby version {{ ruby_version }}
  when: ! rvm_install.changed
  action: shell executable=/usr/local/bin/zsh rvm install --default {{ ruby_version }} creates=~/.rvm/rubies/ruby-{{ ruby_version }}
  register: ruby_install

- name: ensure {{ ruby_version }} is current and default
  when: ruby_install.changed
  action: shell executable=/usr/local/bin/zsh rvm use default

- name: list rubies
  when: ruby_install.changed
  action: shell executable=/usr/local/bin/zsh rvm list strings | grep -v {{ ruby_version }}
  register: rubies

- name: purge old rubies
  when: rubies.changed
  action: shell executable=/usr/local/bin/zsh rvm remove {{ item }}
  with_items: rubies.stdout_lines

# NVM
- name: clone nvm
  action: git repo=https://github.com/creationix/nvm.git dest=~/.nvm

- name: install nodejs version {{ node_version }}
  action: shell executable=/usr/local/bin/zsh nvm install {{ node_version }} creates=~/.nvm/{{ node_version }}
  register: nodejs_install

- name: check nvm alias
  action: shell executable=/usr/local/bin/zsh nvm alias
  register: nvm_alias
  changed_when: false

- name: make nodejs default
  action: shell executable=/usr/local/bin/zsh nvm alias default {{ node_version }}
  register: nvm_default
  changed_when: not nvm_default.stdout.find("{{ nvm_alias }}")

- name: list nodejs installs
  when: nodejs_install.changed
  action: shell executable=/usr/local/bin/zsh nvm list | awk '{print $2 }' | grep -Ev '{{ node_version }}|>' | strings
  register: nvms

- name: purge old nodejs installs
  when: nvms.changed
  action: shell executable=/usr/local/bin/zsh nvm uninstall {{ item }}
  with_items: nvms.stdout_lines
  failed_when: false

# GVM
- name: install gvm wrapper
  action: "shell executable=/usr/local/bin/zsh curl -sSL https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer | /bin/bash creates=~/.gvm"
  ignore_errors: yes

- name: install gvm version {{ golang_version }}
  action: shell executable=/usr/local/bin/zsh gvm install go{{ golang_version }} creates=~/.gvm/gos/go{{ golang_version }}

- name: check gvm alias
  action: shell executable=/usr/local/bin/zsh gvm list
  register: gvm_alias
  changed_when: false

- name: make gvm default
  action: shell executable=/usr/local/bin/zsh gvm use go{{ golang_version }} --default
  register: gvm_default
  changed_when: not gvm_default.stdout.find("{{ gvm_alias.stdout.find("=>") }}")

# Janus
- name: get janus
  action: git repo=https://github.com/carlhuda/janus.git dest=~/.vim
  register: get_janus
  changed_when: get_janus.before != get_janus.after

- name: update janus
  when: '(get_janus.changed and get_janus.before is string)'
  action: shell executable=/usr/local/bin/zsh chdir=~/.vim rake default -qs
